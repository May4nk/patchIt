version: "3.8"
services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper-volume:/bitnami/zookeeper/data

  kafka:
    image: bitnami/kafka:latest
    user: root
    ports:
      - 9092:9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_MAX_REQUEST_SIZE=1048576000
    volumes:
      - kafka-volume:/bitnami/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "echo 'test-message' | kafka-console-producer.sh --broker-list localhost:9092 --topic health-check-topic && kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic health-check-topic --from-beginning --max-messages 1 | grep 'test-message'"]
      interval: 15s
      timeout: 10s
      retries: 5
    depends_on:
      - zookeeper

  db:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=patch
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - patch-db:/var/lib/postgresql/14/main
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'"]
      interval: 10s
      timeout: 3s
      retries: 3

  backend:
    build:
      context: ./server
    ports:
      - 5000:5000
    command: sh -c "npm run start:prod"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - ./server/.env.prod

  frontend:
    build:
      context: ./patchit
    ports:
      - 3000:3000
    command: sh -c "npm start"
    depends_on:
      backend:
        condition: service_started

volumes:
  patch-db:
  kafka-volume:
  zookeeper-volume:
